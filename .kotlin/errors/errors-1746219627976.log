kotlin version: 2.0.21
error message: org.jetbrains.kotlin.backend.common.BackendException: Backend Internal error: Exception during IR lowering
File being compiled: C:/Users/ZBOOK/AndroidStudioProjects/FlyApp/app/src/main/java/com/example/flyapp/ui/theme/screens/SplashScreen.kt
The root cause java.lang.RuntimeException was thrown at: org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate(FunctionCodegen.kt:47)
	at org.jetbrains.kotlin.backend.common.CodegenUtil.reportBackendException(CodegenUtil.kt:253)
	at org.jetbrains.kotlin.backend.common.CodegenUtil.reportBackendException$default(CodegenUtil.kt:236)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invokeSequential(performByIrFile.kt:65)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invoke(performByIrFile.kt:52)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invoke(performByIrFile.kt:38)
	at org.jetbrains.kotlin.backend.common.phaser.NamedCompilerPhase.phaseBody(CompilerPhase.kt:166)
	at org.jetbrains.kotlin.backend.common.phaser.AbstractNamedCompilerPhase.invoke(CompilerPhase.kt:113)
	at org.jetbrains.kotlin.backend.common.phaser.CompositePhase.invoke(PhaseBuilders.kt:27)
	at org.jetbrains.kotlin.backend.common.phaser.CompositePhase.invoke(PhaseBuilders.kt:14)
	at org.jetbrains.kotlin.backend.common.phaser.NamedCompilerPhase.phaseBody(CompilerPhase.kt:166)
	at org.jetbrains.kotlin.backend.common.phaser.AbstractNamedCompilerPhase.invoke(CompilerPhase.kt:113)
	at org.jetbrains.kotlin.backend.common.phaser.CompilerPhaseKt.invokeToplevel(CompilerPhase.kt:62)
	at org.jetbrains.kotlin.backend.jvm.JvmIrCodegenFactory.invokeCodegen(JvmIrCodegenFactory.kt:371)
	at org.jetbrains.kotlin.codegen.CodegenFactory.generateModule(CodegenFactory.kt:47)
	at org.jetbrains.kotlin.backend.jvm.JvmIrCodegenFactory.generateModuleInFrontendIRMode(JvmIrCodegenFactory.kt:433)
	at org.jetbrains.kotlin.cli.jvm.compiler.pipeline.JvmCompilerPipelineKt.generateCodeFromIr(jvmCompilerPipeline.kt:246)
	at org.jetbrains.kotlin.cli.jvm.compiler.pipeline.JvmCompilerPipelineKt.compileModulesUsingFrontendIrAndLightTree(jvmCompilerPipeline.kt:142)
	at org.jetbrains.kotlin.cli.jvm.K2JVMCompiler.doExecute(K2JVMCompiler.kt:148)
	at org.jetbrains.kotlin.cli.jvm.K2JVMCompiler.doExecute(K2JVMCompiler.kt:43)
	at org.jetbrains.kotlin.cli.common.CLICompiler.execImpl(CLICompiler.kt:103)
	at org.jetbrains.kotlin.cli.common.CLICompiler.execImpl(CLICompiler.kt:49)
	at org.jetbrains.kotlin.cli.common.CLITool.exec(CLITool.kt:101)
	at org.jetbrains.kotlin.incremental.IncrementalJvmCompilerRunner.runCompiler(IncrementalJvmCompilerRunner.kt:464)
	at org.jetbrains.kotlin.incremental.IncrementalJvmCompilerRunner.runCompiler(IncrementalJvmCompilerRunner.kt:73)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.doCompile(IncrementalCompilerRunner.kt:506)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compileImpl(IncrementalCompilerRunner.kt:423)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.tryCompileIncrementally$lambda$9$compile(IncrementalCompilerRunner.kt:249)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.tryCompileIncrementally(IncrementalCompilerRunner.kt:267)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compile(IncrementalCompilerRunner.kt:120)
	at org.jetbrains.kotlin.daemon.CompileServiceImplBase.execIncrementalCompiler(CompileServiceImpl.kt:675)
	at org.jetbrains.kotlin.daemon.CompileServiceImplBase.access$execIncrementalCompiler(CompileServiceImpl.kt:92)
	at org.jetbrains.kotlin.daemon.CompileServiceImpl.compile(CompileServiceImpl.kt:1660)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(Unknown Source)
	at java.rmi/sun.rmi.transport.Transport$1.run(Unknown Source)
	at java.rmi/sun.rmi.transport.Transport$1.run(Unknown Source)
	at java.base/java.security.AccessController.doPrivileged(Unknown Source)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(Unknown Source)
	at java.base/java.security.AccessController.doPrivileged(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
Caused by: java.lang.RuntimeException: Exception while generating code for:
FUN LOCAL_FUNCTION_FOR_LAMBDA name:SplashScreen$lambda$15$lambda$14$lambda$9$lambda$8 visibility:private modality:FINAL <> ($trailSize:kotlin.Float, $planeZ:androidx.compose.animation.core.Animatable<kotlin.Float, androidx.compose.animation.core.AnimationVector1D>, $distance:kotlin.Float, $trailOpacity:kotlin.Float, $this$graphicsLayer:androidx.compose.ui.graphics.GraphicsLayerScope) returnType:kotlin.Unit?
  VALUE_PARAMETER BOUND_VALUE_PARAMETER name:$trailSize index:0 type:kotlin.Float
  VALUE_PARAMETER BOUND_VALUE_PARAMETER name:$planeZ index:1 type:androidx.compose.animation.core.Animatable<kotlin.Float, androidx.compose.animation.core.AnimationVector1D>
  VALUE_PARAMETER BOUND_VALUE_PARAMETER name:$distance index:2 type:kotlin.Float
  VALUE_PARAMETER BOUND_VALUE_PARAMETER name:$trailOpacity index:3 type:kotlin.Float
  VALUE_PARAMETER name:$this$graphicsLayer index:4 type:androidx.compose.ui.graphics.GraphicsLayerScope
  BLOCK_BODY
    CALL 'public abstract fun <set-scaleX> (value: kotlin.Float): kotlin.Unit declared in androidx.compose.ui.graphics.GraphicsLayerScope' type=kotlin.Unit origin=EQ
      $this: GET_VAR '$this$graphicsLayer: androidx.compose.ui.graphics.GraphicsLayerScope declared in com.example.flyapp.ui.theme.screens.SplashScreenKt.SplashScreen$lambda$15$lambda$14$lambda$9$lambda$8' type=androidx.compose.ui.graphics.GraphicsLayerScope origin=null
      value: GET_VAR '$trailSize: kotlin.Float declared in com.example.flyapp.ui.theme.screens.SplashScreenKt.SplashScreen$lambda$15$lambda$14$lambda$9$lambda$8' type=kotlin.Float origin=null
    CALL 'public abstract fun <set-scaleY> (value: kotlin.Float): kotlin.Unit declared in androidx.compose.ui.graphics.GraphicsLayerScope' type=kotlin.Unit origin=EQ
      $this: GET_VAR '$this$graphicsLayer: androidx.compose.ui.graphics.GraphicsLayerScope declared in com.example.flyapp.ui.theme.screens.SplashScreenKt.SplashScreen$lambda$15$lambda$14$lambda$9$lambda$8' type=androidx.compose.ui.graphics.GraphicsLayerScope origin=null
      value: GET_VAR '$trailSize: kotlin.Float declared in com.example.flyapp.ui.theme.screens.SplashScreenKt.SplashScreen$lambda$15$lambda$14$lambda$9$lambda$8' type=kotlin.Float origin=null
    SET_FIELD 'FIELD IR_EXTERNAL_JAVA_DECLARATION_STUB name:translationZ type:kotlin.Int visibility:public [final,static] declared in android.R.attr' type=kotlin.Unit superQualifierSymbol=android.R.attr origin=EQ
      value: CALL 'public open fun toInt (): kotlin.Int declared in kotlin.Float' type=kotlin.Int origin=null
        $this: CALL 'public final fun minus (other: kotlin.Float): kotlin.Float [operator] declared in kotlin.Float' type=kotlin.Float origin=MINUS
          $this: CALL 'public final fun <get-value> (): T of androidx.compose.animation.core.Animatable declared in androidx.compose.animation.core.Animatable' type=kotlin.Float origin=GET_PROPERTY
            $this: GET_VAR '$planeZ: androidx.compose.animation.core.Animatable<kotlin.Float, androidx.compose.animation.core.AnimationVector1D> declared in com.example.flyapp.ui.theme.screens.SplashScreenKt.SplashScreen$lambda$15$lambda$14$lambda$9$lambda$8' type=androidx.compose.animation.core.Animatable<kotlin.Float, androidx.compose.animation.core.AnimationVector1D> origin=null
          other: GET_VAR '$distance: kotlin.Float declared in com.example.flyapp.ui.theme.screens.SplashScreenKt.SplashScreen$lambda$15$lambda$14$lambda$9$lambda$8' type=kotlin.Float origin=null
    CALL 'public abstract fun <set-alpha> (value: kotlin.Float): kotlin.Unit declared in androidx.compose.ui.graphics.GraphicsLayerScope' type=kotlin.Unit origin=EQ
      $this: GET_VAR '$this$graphicsLayer: androidx.compose.ui.graphics.GraphicsLayerScope declared in com.example.flyapp.ui.theme.screens.SplashScreenKt.SplashScreen$lambda$15$lambda$14$lambda$9$lambda$8' type=androidx.compose.ui.graphics.GraphicsLayerScope origin=null
      value: GET_VAR '$trailOpacity: kotlin.Float declared in com.example.flyapp.ui.theme.screens.SplashScreenKt.SplashScreen$lambda$15$lambda$14$lambda$9$lambda$8' type=kotlin.Float origin=null
    CALL 'public abstract fun setTransformOrigin-__ExYCQ (value: androidx.compose.ui.graphics.TransformOrigin): kotlin.Unit declared in androidx.compose.ui.graphics.GraphicsLayerScope' type=kotlin.Unit origin=EQ
      $this: GET_VAR '$this$graphicsLayer: androidx.compose.ui.graphics.GraphicsLayerScope declared in com.example.flyapp.ui.theme.screens.SplashScreenKt.SplashScreen$lambda$15$lambda$14$lambda$9$lambda$8' type=androidx.compose.ui.graphics.GraphicsLayerScope origin=null
      value: CALL 'public final fun TransformOrigin (pivotFractionX: kotlin.Float, pivotFractionY: kotlin.Float): androidx.compose.ui.graphics.TransformOrigin declared in androidx.compose.ui.graphics.TransformOriginKt' type=androidx.compose.ui.graphics.TransformOrigin origin=null
        pivotFractionX: CONST Float type=kotlin.Float value=0.5
        pivotFractionY: CONST Float type=kotlin.Float value=0.5

	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate(FunctionCodegen.kt:47)
	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate$default(FunctionCodegen.kt:40)
	at org.jetbrains.kotlin.backend.jvm.codegen.ClassCodegen.generateMethodNode(ClassCodegen.kt:406)
	at org.jetbrains.kotlin.backend.jvm.codegen.ClassCodegen.generateMethod(ClassCodegen.kt:423)
	at org.jetbrains.kotlin.backend.jvm.codegen.ClassCodegen.generate(ClassCodegen.kt:168)
	at org.jetbrains.kotlin.backend.jvm.FileCodegen.lower(JvmPhases.kt:39)
	at org.jetbrains.kotlin.backend.common.phaser.PhaseFactoriesKt.createFilePhase$lambda$4(PhaseFactories.kt:71)
	at org.jetbrains.kotlin.backend.common.phaser.PhaseBuildersKt$createSimpleNamedCompilerPhase$1.phaseBody(PhaseBuilders.kt:69)
	at org.jetbrains.kotlin.backend.common.phaser.SimpleNamedCompilerPhase.phaseBody(CompilerPhase.kt:226)
	at org.jetbrains.kotlin.backend.common.phaser.AbstractNamedCompilerPhase.invoke(CompilerPhase.kt:113)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invokeSequential(performByIrFile.kt:62)
	... 44 more
Caused by: java.lang.AssertionError: access of const val: SET_FIELD 'FIELD IR_EXTERNAL_JAVA_DECLARATION_STUB name:translationZ type:kotlin.Int visibility:public [final,static] declared in android.R.attr' type=kotlin.Unit superQualifierSymbol=android.R.attr origin=EQ
  value: CALL 'public open fun toInt (): kotlin.Int declared in kotlin.Float' type=kotlin.Int origin=null
    $this: CALL 'public final fun minus (other: kotlin.Float): kotlin.Float [operator] declared in kotlin.Float' type=kotlin.Float origin=MINUS
      $this: CALL 'public final fun <get-value> (): T of androidx.compose.animation.core.Animatable declared in androidx.compose.animation.core.Animatable' type=kotlin.Float origin=GET_PROPERTY
        $this: GET_VAR '$planeZ: androidx.compose.animation.core.Animatable<kotlin.Float, androidx.compose.animation.core.AnimationVector1D> declared in com.example.flyapp.ui.theme.screens.SplashScreenKt.SplashScreen$lambda$15$lambda$14$lambda$9$lambda$8' type=androidx.compose.animation.core.Animatable<kotlin.Float, androidx.compose.animation.core.AnimationVector1D> origin=null
      other: GET_VAR '$distance: kotlin.Float declared in com.example.flyapp.ui.theme.screens.SplashScreenKt.SplashScreen$lambda$15$lambda$14$lambda$9$lambda$8' type=kotlin.Float origin=null

	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitFieldAccess(ExpressionCodegen.kt:861)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitFieldAccess(ExpressionCodegen.kt:138)
	at org.jetbrains.kotlin.ir.visitors.IrElementVisitor$DefaultImpls.visitSetField(IrElementVisitor.kt:206)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitSetField(ExpressionCodegen.kt:908)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitSetField(ExpressionCodegen.kt:138)
	at org.jetbrains.kotlin.ir.expressions.IrSetField.accept(IrSetField.kt:21)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitStatementContainer(ExpressionCodegen.kt:579)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitBlockBody(ExpressionCodegen.kt:584)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitBlockBody(ExpressionCodegen.kt:138)
	at org.jetbrains.kotlin.ir.expressions.IrBlockBody.accept(IrBlockBody.kt:20)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.generate(ExpressionCodegen.kt:240)
	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.doGenerate(FunctionCodegen.kt:123)
	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate(FunctionCodegen.kt:44)
	... 54 more


